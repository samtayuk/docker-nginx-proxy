user www-data;
worker_processes auto;
pid /run/nginx.pid;
daemon off;

# Event handler.
events {
    worker_connections  8096;
    multi_accept        on;
    use                 epoll;
}

http {

    server_names_hash_bucket_size 64;
    
    proxy_buffering    off;
    proxy_buffer_size  128k;
    proxy_buffers 100  128k;

    client_max_body_size 5G;

    # HTTP 1.1 support
    proxy_http_version 1.1;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $proxy_connection;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;

    # CACHE
    proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache:60m max_size=1G;

    access_log /proc/self/fd/1 vhost;
    error_log /proc/self/fd/2;

    # If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
    # scheme used to connect to this server
    map $http_x_forwarded_proto $proxy_x_forwarded_proto {
        default $http_x_forwarded_proto;
        ''      $scheme;
    }

    # If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
    # Connection header that may have been passed to this server
    map $http_upgrade $proxy_connection {
        default upgrade;
        ''      '';
    }

    log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent"';

    # Catch Unknown Hosts
    server {
        listen 80 default_server;
        server_name _; # This is just an invalid value which will never trigger on a real hostname.
        return 503;
    }

    include /etc/nginx/conf.d/*.conf;
}
